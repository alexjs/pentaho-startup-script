#! /bin/bash
# enterprise-console   Bring up/down Pentaho Enterprise Console
# chkconfig: 345 85 10
# description: Pentaho Enterprise Console start at boot time.
#
#
### BEGIN INIT INFO
# Provides: enterprise-console
# Required-Start $network $syslog $mysqld
# Required-Stop $network $syslog
# Default-Start:
# Default-Stop:
# Description: Pentaho Enterprise Console start at boot time.
# Short-Description: start and stop enterprise console
### END INIT INFO 

# Source function library.
[ -f /etc/sysconfig/network ] || exit 0
. /etc/rc.d/init.d/functions
. /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

SU=/bin/su

#set environment variables
NAME=enterprise-console
FULLNAME="Pentaho Enterprise Console"
PENTAHOPEC_HOME=/opt/pentaho/enterprise-console
PENTAHOPEC_USR=pentaho
PENTAHOPEC_GRP=pentaho
export PENTAHO_JAVA_HOME=/usr/lib/jvm/java-1.6.0-sun.x86_64

getpid() {
    PID=$(ps ax | grep $NAME | grep java | grep -v grep | awk '{print $1}' )
    echo $PID
}

start() {
    if [ $(getpid)"x" == "x" ]; then
        pushd $PENTAHOPEC_HOME > /dev/null
        action $"Starting Pentaho Enterprise Console" $SU -m $PENTAHOPEC_USR -c "nohup $PENTAHOPEC_HOME/start-pec.sh >> $PENTAHOPEC_HOME/startup.log &"
        popd $PENTAHOPEC_HOME > /dev/null
    else
        action $"Starting Pentaho Enterprise Console" /bin/false
    fi
}

stop() {
    if [ $(getpid)"x" != "x" ]; then
        pushd $PENTAHOPEC_HOME > /dev/null
        action $"Stopping Pentaho Enterprise Console" $SU -m $PENTAHOPEC_USR -c "nohup $PENTAHOPEC_HOME/stop-pec.sh >> $PENTAHOPEC_HOME/startup.log &"
        popd $PENTAHOPEC_HOME > /dev/null
    else
        action $"Stopping Pentaho Enterprise Console" /bin/false
    fi
}

restart() {
    stop
    echo -n "Waiting for the process to stop"
    while [ $(getpid)"x" != "x" ]; do
        sleep 1
        echo -n .
    done
    start
}

status() {
    PID=$(getpid)
    if [ $PID"x" == "x" ]; then
        echo "$FULLNAME($NAME) is stopped"
    else
        echo "$FULLNAME($NAME) is started with pid $PID"
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 1
esac

exit 0
